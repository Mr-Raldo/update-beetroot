# Generated by Django 5.0 on 2024-01-16 01:19

import akyc.encoders
import djmoney.models.fields
import simple_history.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalProfile',
            fields=[
                ('profile_id', models.BigIntegerField(blank=True, db_index=True)),
                ('profile_id_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('email', models.EmailField(db_index=True, max_length=100)),
                ('email_token', models.CharField(blank=True, max_length=100, null=True)),
                ('forget_password_token', models.CharField(blank=True, max_length=100, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('neighbourhood', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=128)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PENDING', 'Pending'), ('INACTIVE', 'Inactive'), ('CANCELLED', 'Cancelled')], default='Inactive', max_length=128)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_image', models.TextField(blank=True, max_length=100, null=True)),
                ('immeditiate_needs', models.CharField(blank=True, max_length=255, null=True)),
                ('ideals', models.CharField(blank=True, max_length=255, null=True)),
                ('self_description', models.TextField(blank=True, null=True)),
                ('platform_joining_goals', models.CharField(blank=True, max_length=255, null=True)),
                ('wallet_address', models.CharField(blank=True, max_length=255, null=True)),
                ('online_status', models.BooleanField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, max_length=255, null=True)),
                ('xUrl', models.URLField(blank=True, max_length=255, null=True)),
                ('linkedIn_url', models.URLField(blank=True, max_length=255, null=True)),
                ('instagram_url', models.URLField(blank=True, max_length=255, null=True)),
                ('account_type', models.CharField(blank=True, max_length=255, null=True)),
                ('specialization', models.CharField(blank=True, max_length=255, null=True)),
                ('special_skills', models.CharField(blank=True, max_length=255, null=True)),
                ('expected_experience', models.CharField(blank=True, max_length=255, null=True)),
                ('trading_as', models.CharField(blank=True, max_length=255, null=True)),
                ('portfolio_url', models.URLField(blank=True, max_length=255, null=True)),
                ('is_subscribed', models.BooleanField(blank=True, null=True)),
                ('is_premium_subscribed', models.BooleanField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, encoder=akyc.encoders.PrettyJSONEncoder, null=True, verbose_name='data')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical User Profile',
                'verbose_name_plural': 'historical User Profiles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSubscription',
            fields=[
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('created_date', models.DateTimeField(blank=True, editable=False)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('deleted_date', models.DateTimeField(blank=True, null=True)),
                ('expiring_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('payment_method', models.TextField(blank=True, null=True)),
                ('amount', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical subscription',
                'verbose_name_plural': 'historical subscriptions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWallet',
            fields=[
                ('walletID', models.BigIntegerField(blank=True, db_index=True)),
                ('createdDate', models.DateTimeField(blank=True, editable=False)),
                ('updatedDate', models.DateTimeField(blank=True, editable=False)),
                ('deletedDate', models.DateTimeField(blank=True, null=True)),
                ('userID', models.UUIDField(blank=True, null=True)),
                ('walletName', models.CharField(blank=True, max_length=255, null=True)),
                ('walletAddress', models.CharField(blank=True, max_length=255, null=True)),
                ('receiverProfileId', models.BigIntegerField()),
                ('currentBalance_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'Euro'), ('USD', 'US Dollar')], default=None, editable=False, max_length=3, null=True)),
                ('currentBalance', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'Active'), ('PENDING', 'Pending'), ('INACTIVE', 'Inactive'), ('CANCELLED', 'Cancelled')], max_length=255, null=True, verbose_name='status')),
                ('data', models.JSONField(blank=True, encoder=akyc.encoders.PrettyJSONEncoder, null=True, verbose_name='data')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical wallet',
                'verbose_name_plural': 'historical wallets',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWalletTransaction',
            fields=[
                ('walletTransactionID', models.BigIntegerField(blank=True, db_index=True)),
                ('createdDate', models.DateTimeField(blank=True, editable=False)),
                ('updatedDate', models.DateTimeField(blank=True, editable=False)),
                ('deletedDate', models.DateTimeField(blank=True, null=True)),
                ('walletName', models.CharField(blank=True, max_length=255, null=True)),
                ('transactionNotes', models.TextField(blank=True, null=True)),
                ('transactionStatus', models.CharField(blank=True, max_length=255, null=True)),
                ('smartContractInvoked', models.BooleanField(blank=True, null=True)),
                ('sendingWallet', models.CharField(blank=True, max_length=255, null=True)),
                ('receivingWallet', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'Euro'), ('USD', 'US Dollar')], default=None, editable=False, max_length=3, null=True)),
                ('amount', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('blockchainTransactionHash', models.CharField(blank=True, max_length=255, null=True)),
                ('blockHash', models.CharField(blank=True, max_length=255, null=True)),
                ('blockNumber', models.CharField(blank=True, max_length=255, null=True)),
                ('cumulativeGasUsed', models.CharField(blank=True, max_length=255, null=True)),
                ('gasUsed', models.CharField(blank=True, max_length=255, null=True)),
                ('blockchainTransactionMessage', models.TextField(blank=True, null=True)),
                ('contractAddress', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical wallet transaction',
                'verbose_name_plural': 'historical wallet transactions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profile_id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('profile_id_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('email_token', models.CharField(blank=True, max_length=100, null=True)),
                ('forget_password_token', models.CharField(blank=True, max_length=100, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('neighbourhood', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=128)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PENDING', 'Pending'), ('INACTIVE', 'Inactive'), ('CANCELLED', 'Cancelled')], default='Inactive', max_length=128)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='images/profileImages/')),
                ('immeditiate_needs', models.CharField(blank=True, max_length=255, null=True)),
                ('ideals', models.CharField(blank=True, max_length=255, null=True)),
                ('self_description', models.TextField(blank=True, null=True)),
                ('platform_joining_goals', models.CharField(blank=True, max_length=255, null=True)),
                ('wallet_address', models.CharField(blank=True, max_length=255, null=True)),
                ('online_status', models.BooleanField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, max_length=255, null=True)),
                ('xUrl', models.URLField(blank=True, max_length=255, null=True)),
                ('linkedIn_url', models.URLField(blank=True, max_length=255, null=True)),
                ('instagram_url', models.URLField(blank=True, max_length=255, null=True)),
                ('account_type', models.CharField(blank=True, max_length=255, null=True)),
                ('specialization', models.CharField(blank=True, max_length=255, null=True)),
                ('special_skills', models.CharField(blank=True, max_length=255, null=True)),
                ('expected_experience', models.CharField(blank=True, max_length=255, null=True)),
                ('trading_as', models.CharField(blank=True, max_length=255, null=True)),
                ('portfolio_url', models.URLField(blank=True, max_length=255, null=True)),
                ('is_subscribed', models.BooleanField(blank=True, null=True)),
                ('is_premium_subscribed', models.BooleanField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, encoder=akyc.encoders.PrettyJSONEncoder, null=True, verbose_name='data')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('deleted_date', models.DateTimeField(blank=True, null=True)),
                ('expiring_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('payment_method', models.TextField(blank=True, null=True)),
                ('amount', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('walletID', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('createdDate', models.DateTimeField(auto_now_add=True)),
                ('updatedDate', models.DateTimeField(auto_now=True)),
                ('deletedDate', models.DateTimeField(blank=True, null=True)),
                ('userID', models.UUIDField(blank=True, null=True)),
                ('walletName', models.CharField(blank=True, max_length=255, null=True)),
                ('walletAddress', models.CharField(blank=True, max_length=255, null=True)),
                ('receiverProfileId', models.BigIntegerField()),
                ('currentBalance_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'Euro'), ('USD', 'US Dollar')], default=None, editable=False, max_length=3, null=True)),
                ('currentBalance', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'Active'), ('PENDING', 'Pending'), ('INACTIVE', 'Inactive'), ('CANCELLED', 'Cancelled')], max_length=255, null=True, verbose_name='status')),
                ('data', models.JSONField(blank=True, encoder=akyc.encoders.PrettyJSONEncoder, null=True, verbose_name='data')),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('walletTransactionID', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('createdDate', models.DateTimeField(auto_now_add=True)),
                ('updatedDate', models.DateTimeField(auto_now=True)),
                ('deletedDate', models.DateTimeField(blank=True, null=True)),
                ('walletName', models.CharField(blank=True, max_length=255, null=True)),
                ('transactionNotes', models.TextField(blank=True, null=True)),
                ('transactionStatus', models.CharField(blank=True, max_length=255, null=True)),
                ('smartContractInvoked', models.BooleanField(blank=True, null=True)),
                ('sendingWallet', models.CharField(blank=True, max_length=255, null=True)),
                ('receivingWallet', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'Euro'), ('USD', 'US Dollar')], default=None, editable=False, max_length=3, null=True)),
                ('amount', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('blockchainTransactionHash', models.CharField(blank=True, max_length=255, null=True)),
                ('blockHash', models.CharField(blank=True, max_length=255, null=True)),
                ('blockNumber', models.CharField(blank=True, max_length=255, null=True)),
                ('cumulativeGasUsed', models.CharField(blank=True, max_length=255, null=True)),
                ('gasUsed', models.CharField(blank=True, max_length=255, null=True)),
                ('blockchainTransactionMessage', models.TextField(blank=True, null=True)),
                ('contractAddress', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
    ]
